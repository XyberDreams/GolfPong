/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/golfpong/gp_ball.glb 
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { KTX2Loader } from "three/examples/jsm/Addons.js";
import useExperience from "../hooks/useExperience";
import * as THREE from "three";

export function GP_Ball(props) {
  const group = React.useRef();
  const { nodes, materials, animations } = useGLTF(
    "/golfpong/gp_ball.glb",
    undefined,
    undefined,
    (loader) => {
      if (window.ktx2loader) {
        loader.setKTX2Loader(window.ktx2loader);
      }
    }
  );
  const { actions } = useAnimations(animations, group);
  const { golfAnimationToPlay } = useExperience();

  useEffect(() => {
    console.log("GOLF ANIMATION IS: ", golfAnimationToPlay);
  }, [golfAnimationToPlay]);

  useEffect(() => {
    if (golfAnimationToPlay && actions[golfAnimationToPlay]) {
      actions[golfAnimationToPlay].reset();
      actions[golfAnimationToPlay].setLoop(THREE.LoopOnce, 1); // Clamp at end
      actions[golfAnimationToPlay].clampWhenFinished = true;
      actions[golfAnimationToPlay].play();
      return () => actions[golfAnimationToPlay].stop();
    }
  }, [golfAnimationToPlay]);

  useEffect(() => {
    if (animations && animations.length > 0) {
      console.log(
        "Ball animation names:",
        animations.map((a) => a.name)
      );
    }
  }, [animations]);

  return (
       <group ref={group} {...props} dispose={null}>
         <group name="Scene">
           <group name="ball" position={[-0.002, -2.28, -0.004]} rotation={[-0.007, 0, 0]}>
             <mesh name="Cube050" geometry={nodes.Cube050.geometry} material={materials['Material.012']} />
             <mesh name="Cube050_1" geometry={nodes.Cube050_1.geometry} material={materials['Material.011']} />
           </group>
         </group>
       </group>
  );
}
