/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/golfpong/gp_scene.glb 
*/

import React, { useEffect, useRef, useState } from "react";
import { KTX2Loader } from "three/examples/jsm/Addons.js";
import * as THREE from "three";
import { useGLTF, useAnimations, Line } from "@react-three/drei";
import { useThree, useFrame } from "@react-three/fiber";
import { useExperience } from "../hooks/useExperience";
import useAnimationHelper from "../hooks/useAnimationHelper";
import { useControls, button } from "leva";
import { DissolveMaterial } from "../utils/DissolveMaterial";

export default function Test_Dissolve(props) {
  const group = React.useRef();
  const trailRef = useRef([]);

  const [dissolveVisible, setDissolveVisible] = useState(false);

  const lastPoint = trailRef.current[trailRef.current.length - 1];
  const trailKey = lastPoint
    ? `${lastPoint.x},${lastPoint.y},${lastPoint.z}`
    : "empty";

  const [trail, setTrail] = useState([]);
  const gl = useThree((state) => state.gl);
  // KTX2Loader logic for KTX2-compressed textures
  const { nodes, materials, animations } = useGLTF(
    "/golfpong/gp_scene.glb",
    undefined,
    undefined,
    (loader) => {
      const ktx2loader = new KTX2Loader();
      ktx2loader.setTranscoderPath(
        "https://cdn.jsdelivr.net/gh/pmndrs/drei-assets/basis/"
      );
      ktx2loader.detectSupport(gl);
      loader.setKTX2Loader(ktx2loader);
    }
  );
  const { actions } = useAnimations(animations, group);
  const animationNames = Object.keys(actions);
  const animationHelper = useAnimationHelper(actions, animationNames, group);

  const { golfSwingState } = useExperience();

  useControls("GOLF Controls", {
    Play_Animation: button(() => {
      if (!actions || Object.keys(actions).length === 0) return;
      Object.values(actions).forEach((action) => {
        if (action) {
          action.reset();
          action.setLoop(THREE.LoopOnce, 1);
          action.clampWhenFinished = true;
          action.paused = false;
          action.play();
        }
      });
    }),
    Dissolve: button(() => setDissolveVisible((prev) => !prev)),
  });

  const boxMaterial = new THREE.MeshStandardMaterial({ color: "red" });

  useEffect(() => {
    console.log("Material.003:", materials["Material.003"]);
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        name="puttingg_green_primitive1"
        geometry={nodes.puttingg_green_primitive1.geometry}
        position={[0, -2.344, 0]}
        scale={[0.185, 0.185, 0.186]}
      >
        <DissolveMaterial
          baseMaterial={materials["a.grass"]}
          visible={dissolveVisible}
        />
      </mesh>
      <mesh>
        <boxGeometry />
        {/* <meshStandardMaterial color="white" /> */}
        <DissolveMaterial
          baseMaterial={boxMaterial}
          visible={dissolveVisible}
        />
      </mesh>
    </group>
  );
}

// useGLTF.preload("/golfpong/gp_scene.glb");
